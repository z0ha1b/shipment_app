@using Shipment.WebApp.Models.LocationModels
@using Shipment.Application.Services.Interfaces
@using AutoMapper
@model OrderModel
@inject ILookupService _lookupService
@inject IMapper _mapper


@{
    ViewData["Title"] = " Customer Application";
}

<div >
<h3 class="text-center mb-3"> Customer Application</h3>
@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <div class="container">
    <div class="row">
        <div class="col">
            @if (!string.IsNullOrEmpty(Model.Message) && !Model.Success)
            {
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
                        <use xlink:href="#exclamation-triangle-fill"/>
                    </svg>
                    <div>
                        @Model.Message
                    </div>
                </div>
            }
            else if (Model.Success)
            {
                <div class="alert alert-success d-flex align-items-center" role="alert">
                    <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:">
                        <use xlink:href="#check-circle-fill"/>
                    </svg>
                    <div>
                        Record has been saved successfully.
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h5>Bill To</h5>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.CompanyName, new
                        {
                            @class = "form-control", @id = "txtBillToCompany"
                            , @required = "required"
                        })
                        <label for="txtShipToCompany">Company Name</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.Addr, new
                        {
                            @class = "form-control", @id = "txtBillToAddr"
                            , @required = "required"
                        })
                        <label for="txtShipToAddr">Address</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.City, new
                        {
                            @class = "form-control", @id = "txtBillToCity"
                            , @required = "required"
                        })
                        <label for="txtShipToCity">City</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        @{
                            var billToCountriesDto = await _lookupService.ReadCountries();
                            IReadOnlyList<CountryModel> billToCountries = _mapper.Map<List<CountryModel>>(billToCountriesDto);
                            var billToSelectCountriesList = new SelectList(billToCountries, "Id", "CountryName");
                        }
                        @Html.DropDownListFor(x => x.BillTo.Country, billToSelectCountriesList, "Select Country", new
                        {
                            @class = "form-select",
                            @id = "BillToCountryDropDown"
                            , @required = "required"
                        })

                        <label for="floatingSelect">Country</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.Zip, new
                        {
                            @class = "form-control", @id = "txtBillToZip"
                            , @required = "required"
                        })
                        <label for="txtShipToZip">Zip</label>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-floating">
                        @{
                            // var billToStateDto = await _lookupService.ReadStates(String.Empty);
                            var billToStates = new List<StateModel>(); //_mapper.Map<List<StateModel>>(billToStateDto);
                            var billToStatesList = new SelectList(billToStates, "Id", "StateName");
                        }
                        @Html.DropDownListFor(x => x.BillTo.State, billToStatesList, "Select State", new
                        {
                            @class = "form-select",
                            @id = "ddlBillToState"
                            , @required = "required"
                        })
                        <label for="ddlBillToState">State</label>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.County, new
                        {
                            @class = "form-control", @id = "txtShipToPhone"
                            , @required = "required"
                        })
                        <label for="txtShipToPhone">County</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.Phone, new
                        {
                            @class = "form-control", @id = "txtBillToPhone"
                            , @required = "required"
                        })
                        <label for="txtShipToPhone">Phone</label>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.Contact, new
                        {
                            @class = "form-control", @id = "txtBillToBillingContact"
                            , @required = "required"
                        })
                        <label for="txtBillToBillingContact">Billing Contact</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.ContactEmail, new
                        {
                            @class = "form-control", @id = "txtBillToBillingContactEmail",
                            @type = "email", @required = "required"
                        })
                        <label for="txtBillToBillingContactEmail">Billing Contact Email</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.DbNumber, new
                        {
                            @class = "form-control", @id = "txtBillTOD&BNumber",
                        })
                        <label for="txtBillTOD&BNumber">D&B Number</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.NatureOfBusiness, new
                        {
                            @class = "form-control", @id = "txtBillNatureOfBusiness"
                        })
                        <label for="txtBillNatureOfBusiness">Nature of Business</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.BillTo.YearsInBusiness, new
                        {
                            @class = "form-control", @id = "txtBillToYearInBusiness"
                        })
                        <label for="txtBillToYearInBusiness">Year in Business</label>
                    </div>
                </div>

            </div>
        </div>
        <div class="col">
            <h5>Ship To</h5>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.CompanyName, new
                        {
                            @class = "form-control", @id = "txtShipToCompany"
                            , @required = "required"
                        })
                        <label for="txtShipToCompany">Company Name</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.Addr, new
                        {
                            @class = "form-control", @id = "txtShipToAddr"
                            , @required = "required"
                        })
                        <label for="txtShipToAddr">Address</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.City, new
                        {
                            @class = "form-control", @id = "txtShipToCity"
                            , @required = "required"
                        })
                        <label for="txtShipToCity">City</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        @{
                            var shipToCountriesDto = await _lookupService.ReadCountries();
                            IReadOnlyList<CountryModel> shipToCountries = _mapper.Map<List<CountryModel>>(shipToCountriesDto);
                            var shipToSelectCountriesList = new SelectList(shipToCountries, "Id", "CountryName");
                        }
                        @Html.DropDownListFor(x => x.ShipTo.Country, shipToSelectCountriesList, "Select Country", new
                        {
                            @class = "form-select",
                            @id = "ShipToCountryDropDown"
                            , @required = "required"
                        })

                        <label for="floatingSelect">Country</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.Zip, new
                        {
                            @class = "form-control", @id = "txtShipToZip"
                            , @required = "required"
                        })
                        <label for="txtShipToZip">Zip</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        @{
                            // var shipToStateDto = await _lookupService.ReadStates(String.Empty);
                            var shipToStates = new List<StateModel>(); //_mapper.Map<List<StateModel>>(shipToStateDto);
                            var shipToStatesList = new SelectList(shipToStates, "Id", "StateName");
                        }
                        @Html.DropDownListFor(x => x.ShipTo.State, shipToStatesList, "Select State", new
                        {
                            @class = "form-select",
                            @id = "ddlShipToState"
                            , @required = "required"
                        })
                        <label for="ddlShipToState">State</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.County, new
                        {
                            @class = "form-control", @id = "txtShipToPhone"
                            , @required = "required"
                        })
                        <label for="txtShipToPhone">County</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.Phone, new
                        {
                            @class = "form-control", @id = "txtShipToPhone"
                            , @required = "required"
                        })
                        <label for="txtShipToPhone">Phone</label>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.Contact, new { @class = "form-control", @id = "txtShipToShippingContact", @required = "required" })
                        <label for="floatingInput">Shipping Contact</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.ShipTo.ContactEmail, new
                        {
                            @class = "form-control", @id = "txtShipToShippingContactEmail",
                            @type = "email", @required = "required"
                        })
                        <label for="txtShipToShippingContactEmail">Shipping Contact Email</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card text-bg-light mb-3">
                <div class="row mb-3">
                    <div class="col-md-2">
                        <h6 class="p-2">Tax Exempt</h6>
                    </div>
                    <div class="col-md-1 p-2">
                        <div class="form-check">
                            @Html.RadioButtonFor(x => x.TaxExempt, "Yes", new { @class = "form-check-input", @id = "radioButtonTaxExemptYes", @required = "required" })
                            <label class="form-check-label" for="radioButtonTaxExemptYes">
                                Yes
                            </label>
                        </div>
                    </div>
                    <div class="col-md-1 p-2">
                        <div class="form-check">
                            @Html.RadioButtonFor(x => x.TaxExempt, "No", new { @class = "form-check-input", @id = "radioButtonTaxExemptNo", @required = "required" })
                            <label class="form-check-label" for="radioButtonTaxExemptNo">
                                No
                            </label>
                        </div>
                    </div>
                </div>
                <p class="card-text fw-bold p-2 m-1">
                    The sales/use tax obligation is the customer’s. Please provide applicable Tax Exempt Certificate. If no certificate is provided,
                    sales tax might be collected and will not be refunded.
                </p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="row mb-3">
            <div class="col-md-6">
                <p class="card-title p-2"> Please indicate if your company requires purchase order numbers: </p>
            </div>
            <div class="col-md-1 p-2">
                <div class="form-check">
                    @Html.RadioButtonFor(x => x.PurchaseOrderRequired, "Yes", new { @class = "form-check-input", @id = "radioButtonPurchaseOrderRequiredYes", @required = "required" })

                    <label class="form-check-label" for="radioButtonPurchaseOrderRequiredYes">
                        Yes
                    </label>
                </div>
            </div>
            <div class="col-md-1 p-2">
                <div class="form-check">
                    @Html.RadioButtonFor(x => x.PurchaseOrderRequired, "No", new { @class = "form-check-input", @id = "radioButtonPurchaseOrderRequiredNo" })
                    <label class="form-check-label" for="radioButtonPurchaseOrderRequiredNo">
                        No
                    </label>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.FieldOne, new { @class = "form-control", @id = "txtField1" })
                        <label for="txtField1">Field 1: </label>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.FieldTwo, new { @class = "form-control", @id = "txtField2" })
                        <label for="txtField2">Field 2: </label>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(x => x.FieldThree, new { @class = "form-control", @id = "txtField3" })
                        <label for="txtField3">Field 3: </label>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col">
            <input class="btn btn-primary" type="submit"/>
        </div>
    </div>

    </div>
}
</div>

<input type="hidden" id="hdnStatesUrl" value="@Href("~/Home/GetStates")"/>

@section Scripts
{
    <script type="text/javascript" src="@Href("~/js/custom/lookups.js")"></script>
}