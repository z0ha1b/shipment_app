// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shipment.Infrastructure.Data;

#nullable disable

namespace Shipment.Infrastructure.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20231003224533_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shipment.Core.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Addr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Address");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Shipment.Core.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BillToId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ShipToId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxExempt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillToId");

                    b.HasIndex("ShipToId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shipment.Core.Entities.BillingInfo", b =>
                {
                    b.HasBaseType("Shipment.Core.Entities.Address");

                    b.Property<string>("DbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearsInBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("BillingInfo");
                });

            modelBuilder.Entity("Shipment.Core.Entities.Order", b =>
                {
                    b.HasOne("Shipment.Core.Entities.BillingInfo", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId");

                    b.HasOne("Shipment.Core.Entities.Address", "ShipTo")
                        .WithMany()
                        .HasForeignKey("ShipToId");

                    b.Navigation("BillTo");

                    b.Navigation("ShipTo");
                });
#pragma warning restore 612, 618
        }
    }
}
